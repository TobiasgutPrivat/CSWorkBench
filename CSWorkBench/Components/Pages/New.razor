@page "/new"

@using System.Threading.Tasks
@if (selectedType == null){
    <input class="form-control" type="text" @bind-value="filter" @bind-value:event="oninput"></input>

    <ul class="list-group">
        @foreach (Type type in refService.getAllTypes().Where(t => filter == null || t.Name.Contains(filter, StringComparison.OrdinalIgnoreCase))
            .Where(t => refService.getTypeInfo(t).constructors.Any())
            .OrderBy(t => t.Name)
            .Take(10))
        {
            <li @onclick="e => selectedType = type" style="cursor:pointer;">
                <ClassPreview Type="type"></ClassPreview>
            </li>
        }
    </ul>
} else {
    <ClassPreview Type="selectedType" OnClick="() => {selectedType = null; StateHasChanged();}"></ClassPreview>
    TypeInf typeInfo = refService.getTypeInfo(selectedType);
    if (typeInfo.constructors.Count == 0) {
        <p>No constructor found!</p>
    }
    foreach (ConstructorInfo ctor in typeInfo.constructors)
    {
        <MethodForm method="ctor" callBack="onCreate"></MethodForm>
    }
}

@code{
    [Parameter]
    public Action<object>? onObjectCreated { get; set; }

    private string? filter;
    private Type? selectedType;

    private async Task onCreate(object obj) {
        if (onObjectCreated != null) {
            onObjectCreated(obj);
        } else {
            RootObject root = await registry.SaveObject(obj);
            Navigation.NavigateTo("/" + root.id, forceLoad: true);
        }
    }
}
