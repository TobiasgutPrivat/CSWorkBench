@using System.Threading.Tasks
@if (selectedType == null){
    <input class="form-control" type="text" @bind-value="filter"></input>

    foreach (Type type in refService.getAllTypes().Where(t => filter == null || t.Name.Contains(filter, StringComparison.OrdinalIgnoreCase)).OrderBy(t => t.Name).Take(10))
    {
        <ClassPreview Type="type" @onclick="() => selectedType = type"></ClassPreview>
    }
} else {
    foreach (ConstructorInfo ctor in selectedType.GetConstructors())
    {
        <MethodForm method="ctor" callBack="onCreate"></MethodForm>
    }
}

@code{
    [Parameter]
    public Action<object>? onObjectCreated { get; set; }

    private Modal selectClassModal = default!;
    private TaskCompletionSource<Type?>? tcs;
    private string? filter;
    private Type? selectedType;

    private async Task onCreate(object obj) {
        if (onObjectCreated != null) {
            onObjectCreated(obj);
        } else {
            RootObject root = await registry.SaveObject(obj);
            Navigation.NavigateTo("/" + root.id, forceLoad: true);
        }
    }
}
