@switch (field.FieldType)
{
    case Type t when t == typeof(string) || t == typeof(char):
        <BSInput InputType="InputType.Text" @bind-Value="Value"></BSInput>
        break;
    case Type t when t == typeof(int) || t == typeof(short) || t == typeof(long) || t == typeof(ushort) || t == typeof(uint)
|| t == typeof(ulong):
        <BSInput InputType="InputType.Number" @bind-Value="Value"></BSInput>
        break;
    case Type t when t == typeof(float) || t == typeof(double) || t == typeof(decimal):
        <BSInput InputType="InputType.Number" @bind-Value="Value" Step="any"></BSInput>
        break;
    case Type t when t == typeof(bool):
        <BSInputCheckbox @bind-Value="Value"></BSInputCheckbox>
        break;
    default:
        <p>unknown</p>
        break;
}

@code {
    [Parameter]
    public required object obj { get; set; }

    [Parameter]
    public required FieldInfo field { get; set; }

    [Parameter]
    public required Action markModified { get; set; }

    private object? Value
    {
        get => field.GetValue(obj);
        set
        {
            markModified();
            field.SetValue(obj, value);
        }
    }
}
